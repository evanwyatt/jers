# JERS configuration file

# State configuration
state_dir /var/lib/jers/state
flush_defer yes
flush_defer_ms 5000

# temp_dir is used to store the temporary scripts generated by each job
# This directory is cleared when jers starts
temp_dir /var/spool/jers/tmp

# Milliseconds between backgrounds saves
background_save_ms 15000

# Automatically cleanup completed jobs older than n hours
#auto_cleanup 24

# Client listen socket
client_listen_socket /run/jers/jers.sock

# Agent listen socket
agent_listen_socket /run/jers/agent.sock
agent_listen_port 7000

# Slow request logging
# Valid values are:
# "off" - Don't record any slow requests
# "all" - Records all requests as slow
# n     - Number of milliseconds before a request is considered slow
slowrequest_threshold 50

#
# Scheduling parameters
#

# milliseconds between event checking
event_freq 10

# milliseconds between scheduling polls
sched_freq 250

# Maximum jobs to release per poll loop
sched_max 500

# Total number of jobs allowed to run on this instance of jers
# Default = unlimited
#max_system_jobs 1000

# Highest jobid to use
# Once this number is reached job number will start again from 1
max_jobid 9999999

# Number of jobs deleted jobs to cleanup at one time
# Default 250
#max_clean_job 250

# Index Tag - Specify a tag key to be indexed.
# This can speedup the lookup of jobs when filter by tag.
#index_tag tag_key

#
# Permissions
#
# By default a user can read/submit/modify jobs under their own account.
# Groups are required to be setup to allow extra permissions:
#
# self   - If specified a user must be in this group to even read/add/mod jobs as themselves
# read   - Allow a user to read all users jobs
# write  - Allow a user to modify(delete/release) all users jobs and start/stop queues
# setuid - Allow a user to submit jobs under another UID
# queue  - Allow a user to add/delete queues

#self_group jers_self
#read_group jers_read
#write_group jers_write
#setuid_group jers_setuid
#queue_group jers_queue
